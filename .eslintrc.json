{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "plugins": ["react", "react-hooks", "@typescript-eslint"],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "env": {
    "browser": true,
    "node": true,
    "es6": true
  },
  "rules": {
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "no-unused-vars": "off", // Turn off the base rule
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true,
        "argsIgnorePattern": "^_" // Ignore unused variables that start with an underscore
      }
    ],
    "no-undef": "off", // Disable this rule for TypeScript as it handles this check
    "no-restricted-globals": [
      "error",
      {
        "name": "location",
        "message": "Use the useLocation hook from react-router-dom instead of the global location."
      },
      // {
      //   "name": "window",
      //   "message": "Use dependency injection or other methods to access window object."
      // },
      {
        "name": "document",
        "message": "Use dependency injection or other methods to access document object."
      }
    ],
    "no-console": "error" // Error on usage of console calls
  },
  "overrides": [
    {
      "files": ["**/*.test.ts", "**/*.test.tsx"],
      "rules": {
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-explicit-any": "off", // Allow `any` type in test files
        "no-console": "off" // Allow console statements in test files
      }
    }
  ]
}
